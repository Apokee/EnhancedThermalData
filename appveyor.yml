version: "{build}"

configuration:
  - Debug
  - Release

before_build:
  ps: |
      $isMasterBranch = $env:APPVEYOR_REPO_BRANCH -eq "master"
      $isReleaseConfiguration = $env:CONFIGURATION -eq "Release"
      $isTagged = $env:APPVEYOR_REPO_TAG -eq "true"
      $env:BUILD_RELEASE = $isMasterBranch -and $isReleaseConfiguration -and $isTagged
      if ($env:BUILD_RELEASE -eq "True") {
        Add-AppveyorMessage "Building RELEASE version"
      } else {
        Add-AppveyorMessage "Building NON-RELEASE version"
      }

build_script:
  ps: |
      if ($env:BUILD_RELEASE -eq "True") {
        ./build --configuration="$env:CONFIGURATION" --release=true
      } else {
        ./build --configuration="$env:CONFIGURATION"
      }

after_build:
  ps: |
      $env:BUILD_VERSION = (cat .build/meta/VERSION)
      $env:BUILD_PRERELEASE = (cat .build/meta/PRERELEASE)
      $changeLog = (cat .build/meta/CHANGELOG)
      if ($chaneLog -eq $null) {
        $env:BUILD_CHANGELOG = ""
      } else {
        $env:BUILD_CHANGELOG = [System.String]::Join("\n", $changeLog)
      }
      $versionMessage = "Version: $env:BUILD_VERSION"
      if ($env:BUILD_PRERELEASE -eq "true") {
        $versionMessage += " (PRERELEASE)"
      }
      Add-AppveyorMessage "$versionMessage"
      Add-AppveyorMessage "Changes:`n$env:BUILD_CHANGELOG"

test: off

artifacts:
  - path: '.build\pkg\$(configuration)\*.zip'
    name: ZipPackage

deploy:
  - provider: GitHub
    release: v$(BUILD_VERSION)
    description: $(BUILD_CHANGELOG)
    auth_token:
      secure: EmsGaC6JRUeanKOhuSCl3ka+kK0czrAG7LHBaYONuUWfV/rIARRFkwoSKZiZHWTe
    artifact: ZipPackage
    draft: false
    prerelease: $(BUILD_PRERELEASE)
    on:
      build_release: True
